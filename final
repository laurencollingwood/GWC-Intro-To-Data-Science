#Talking Data Starter Code

#Part 2 Setting up the program
import pandas as pd
import matplotlib.pyplot as plt

pd.set_option('display.max_columns', None)
pd.set_option('max_colwidth', None)

movieData = pd.read_csv('./rotten_tomatoes_movies.csv')
favMovie = "Good Will Hunting"

print("My favourite movie is " + favMovie)


#Part 3 Investigate the data



#Part 4 Filter data
print("\nThe data for my favorite movie is:\n")
#Create a new variable to store your favorite movie information
favMovieList = movieData["movie_title"] == favMovie
favMovieData = movieData.loc[favMovieList]
print(favMovieData)


print("\n\n")

#Create a new variable to store a new data set with a certain genre
DramaMovieList = movieData["genres"].str.contains("Drama")
DramaMovieData = movieData.loc[DramaMovieList]


numOfMovies = DramaMovieList.shape[0]

print("We will be comparing " + favMovie +
      " to other movies under the genre drama in the data set.\n")
print("There are " + str(numOfMovies) + " movies under the category drama.")

print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")
input("Press enter to see more information about how " + favMovie +
      " compares to other movies in this genre.\n")

#Part 5 Describe data
#min
min = DramaMovieData["audience_rating"].min()
print("The min audience rating of the data set is: " + str(min))
differenceMin = favMovieData["audience_rating"].iloc[0] - min
print(favMovie + " is rated " + str(differenceMin) + "points higher than the lowest rated movie.")
print()

#find max
max = DramaMovieData["audience_rating"].max()
print("The max audience rating of the data set is: " + str(max))
differenceMax = max - favMovieData["audience_rating"].iloc[0]
print(favMovie + " is rated " + str(differenceMax) + " points lower than the highest rated movie.")
print()

#find mean
mean = DramaMovieData["audience_rating"].mean()
print("The mean audience rating of the data set is: " + str(mean))
if favMovieData["audience_rating"].iloc[0] > mean:
      print(favMovie + " is higher than the mean movie rating")
elif favMovieData["audience_rating"].iloc[0] < mean:
      print(favMovie + " is lower than the mean movie rating")
elif favMovieData["audience_rating"].iloc[0] == mean:
      print(favMovie + " is the same as the mean movie rating")
      
#find median
median = DramaMovieData["audience_rating"].median()
print("The median audience rating of the data set is: " + str(median))
if favMovieData["audience_rating"].iloc[0] > median:
      print(favMovie + " is higher than the median movie rating")
elif favMovieData["audience_rating"].iloc[0] < median:
      print(favMovie + " is lower than the median movie rating")
elif favMovieData["audience_rating"].iloc[0] == median:
      print(favMovie + " is the same as the median movie rating")
      
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")
input("Press enter to see data visualizations.\n")

#Part 6 Create graphs
#Create histogram
plt.hist(DramaMovieData["audience_rating"])

#Adds labels and adjusts histogram
plt.grid(True)
plt.title("Audience ratings of Drama Movies")
plt.xlabel("Audience Ratings")
plt.ylabel("Number of Drama Movies")

#Prints interpretation of histogram
print(
  "According to the histogram, there are a majority of drama movies with an audience rating of 80-90"
)
print("Close the graph by pressing the 'X' in the top right corner.")
print()

#Show histogram
plt.show()

#Create scatterplot
plt.scatter(data = DramaMovieData, x = "audience_rating", y = "critic_rating")

#Adds labels and adjusts scatterplot
plt.grid(True)
plt.title("Audience ratings vs. critic ratings of Drama Movies")
plt.xlabel("Audience Ratings")
plt.ylabel("Critial Ratings")
plt.xlim(0, 100)
plt.ylim(0, 100)

#Prints interpretation of scatterplot
print(
  "According to the scatter plot, there is a weak positive correlation between the audience rating and the critic rating of the drama movies."
)
print()

print("Close the graph by pressing the 'X' in the top right corner.")

#Show scatterplot
plt.show()

print("\nThank you for reading through my data analysis!")
